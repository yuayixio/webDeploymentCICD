image: ubuntu:18.04

stages:
  - deploy

deploy:
  stage: deploy
  script:
   ## Install rsync
  - apk update && apk add rsync

  ## Add ssh client
  - 'which ssh-agent || ( apk update && apk add openssh-client)'
  
  ##  Run ssh-agent (inside the build environment)
  - eval "$(ssh-agent -s)"
  
  ## Add the SSH key
  - echo "$DEPLOY_KEY" | ssh-add -
  
  ## In case of necessary password (uncompleted)
  #- apk add sshpass
  #- sshpass -p "$DEPLOY_PW" ssh -o StrictHostKeyChecking=no USER@HOSTNAMEORADRESS
 
 ## Create the SSH directory and give it the right permissions 
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  
  ## Host key verification fix
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  
  ## Check local files
  - ls

  ## Check remote access
  - ssh -tt USER@HOSTNAMEORADRESS "ls -l ~/moed"

   # Create temp folder structure if not existing
  - ssh USER@HOSTNAMEORADRESS "mkdir -p ~/moedcloneTemp"

  ##  Copy files; just use "www" folder (in which the .html file is stored)
  - rsync -a --delete --stats ./www/ USER@HOSTNAMEORADRESS:~/moedcloneTemp

  ## Check successful copy
  - ssh USER@HOSTNAMEORADRESS "ls -l ~/moedcloneTemp"

  ## Move existing directory in Outdated folder and new one in the main one
  - ssh USER@HOSTNAMEORADRESS "mv ~/moedclone ~/moedcloneOld && mv ~/moedcloneTemp ~/moedclone" 

  ## Remove old directory
  - ssh USER@HOSTNAMEORADRESS "sudo rm -rf ~/moedcloneOld"

  ## Replace the definition of the target  site 
  - ssh USER@HOSTNAMEORADRESS "cd /etc/httpd/conf/"
  - ssh USER@HOSTNAMEORADRESS "sed -i 's/DocumentRoot "/var/www/html"/DocumentRoot "~/moed/www"/g' httpd.conf"

  ## Optional, if .html file is not named "index" (Replace "INDEXNAME" with according name) 
  #- ssh USER@HOSTNAMEORADRESS "sed -i 's/DirectoryIndex index.html/DirectoryIndex INDEXNAME.html/g' httpd.conf"
